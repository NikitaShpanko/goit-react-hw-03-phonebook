{"version":3,"sources":["components/App/ContactForm/ContactForm.jsx","components/App/ContactList/ContactList.jsx","components/App/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["ContactForm","state","name","number","handleInput","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","alert","this","type","pattern","title","required","onChange","React","Component","ContactList","contacts","onDelete","handleDelete","id","map","onClick","Filter","App","filter","find","contact","toLowerCase","prev","uuidv4","delIndex","findIndex","splice","onFilterChange","localText","localStorage","getItem","localContacts","JSON","parse","Array","isArray","Error","includes","setItem","stringify","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fe226eb8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass ContactForm extends React.Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  handleInput = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.props.onSubmit(this.state))\r\n      this.setState({ name: \"\", number: \"\" });\r\n    else alert(`${this.state.name} is already in contacts.`);\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            onChange={this.handleInput}\r\n            value={this.state.name}\r\n          />\r\n        </label>\r\n        <label>\r\n          Number\r\n          <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            onChange={this.handleInput}\r\n            value={this.state.number}\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nContactForm.propTypes = { onSubmit: PropTypes.func };\r\n\r\nexport default ContactForm;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst ContactList = ({ contacts, onDelete }) => {\r\n  const handleDelete = (e) => {\r\n    onDelete(e.target.id);\r\n  };\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <li key={id}>\r\n          {name} {number}\r\n          <button type=\"button\" id={id} onClick={handleDelete}>\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  onDelete: PropTypes.func,\r\n};\r\n\r\nexport default ContactList;\r\n","import PropTypes from \"prop-types\";\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input value={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\n\r\nFilter.propTypes = { value: PropTypes.string, onChange: PropTypes.func };\r\n\r\nexport default Filter;\r\n","import React from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./ContactForm/ContactForm\";\r\nimport ContactList from \"./ContactList/ContactList\";\r\nimport Filter from \"./Filter/Filter\";\r\n\r\nclass App extends React.Component {\r\n  state = { contacts: [], filter: \"\" };\r\n\r\n  onSubmit = ({ name, number }) => {\r\n    if (\r\n      this.state.contacts.find(\r\n        (contact) => contact.name.toLowerCase() === name.toLowerCase()\r\n      )\r\n    ) {\r\n      return false;\r\n    }\r\n    this.setState((prev) => ({\r\n      contacts: [...prev.contacts, { id: uuidv4(), name, number }],\r\n    }));\r\n    return true;\r\n  };\r\n\r\n  onDelete = (id) => {\r\n    const delIndex = this.state.contacts.findIndex(\r\n      (contact) => contact.id === id\r\n    );\r\n    this.setState((prev) => {\r\n      prev.contacts.splice(delIndex, 1);\r\n      return {\r\n        contacts: [...prev.contacts],\r\n      };\r\n    });\r\n  };\r\n\r\n  onFilterChange = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Phonebook</h1>\r\n        <ContactForm onSubmit={this.onSubmit} />\r\n\r\n        <h2>Contacts</h2>\r\n        <Filter value={this.state.filter} onChange={this.onFilterChange} />\r\n        <ContactList\r\n          contacts={this.state.contacts.filter((contact) =>\r\n            contact.name.includes(this.state.filter)\r\n          )}\r\n          onDelete={this.onDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  constructor() {\r\n    super();\r\n    const localText = localStorage.getItem(\"contacts\");\r\n    if (!localText) return;\r\n\r\n    try {\r\n      const localContacts = JSON.parse(localText);\r\n      if (!Array.isArray(localContacts)) throw new Error();\r\n      this.state.contacts = localContacts;\r\n    } catch {\r\n      alert(\r\n        \"Your LocalStorage data for this site is corrupted. You may try to access and repair it manually using your browser's DevTools and then reload this page. As for now your contact list cannot be shown.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App/App.jsx\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}